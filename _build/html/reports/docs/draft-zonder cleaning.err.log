Traceback (most recent call last):
  File "/Users/robinkuipers/anaconda3/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/robinkuipers/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/robinkuipers/anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/robinkuipers/anaconda3/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/robinkuipers/anaconda3/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/robinkuipers/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/robinkuipers/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/robinkuipers/anaconda3/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import plotly.express as px
import dash
import dash_core_components as dcc
from dash import html


# Load the dataset
df = pd.read_csv('happiness_2020-def.csv')

# Initialize the Dash app
app = dash.Dash(__name__)

# Define the layout of the app
app.layout = html.Div([
    dcc.Dropdown(
        id='country-dropdown',
        options=[{'label': country, 'value': country} for country in df['Country name'].unique()],
        value=df['Country name'].unique()[0], 
    ),
    html.H2(id='chart-title'),
    dcc.Graph(id='pie-chart')
])

# Define the callback function to update the pie chart
@app.callback(
    [dash.dependencies.Output('pie-chart', 'figure'),
     dash.dependencies.Output('chart-title', 'children')],
    [dash.dependencies.Input('country-dropdown', 'value')]
)
def update_pie_chart(country):
    # Filter the dataframe based on the selected country
    filtered_df = df[df['Country name'] == country]
    
    # Prepare data for the pie chart
    labels = filtered_df.columns[3:]
    values = filtered_df.iloc[0, 3:]
    
    
    # Create the pie chart figure
    fig = px.pie(values=values, names=labels, hole=0.5)
    
    # Add the text '2020' in the center of the pie chart
    fig.update_layout(
        annotations=[dict(text='2020', x=0.5, y=0.5, font_size=20, showarrow=False)],
    )
    
    # Set the chart title
    title = f"Distribution of each happiness factor for {country}"
    
    return fig, title

# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mOSError[0m                                   Traceback (most recent call last)
Cell [0;32mIn[21], line 54[0m
[1;32m     52[0m [38;5;66;03m# Run the app[39;00m
[1;32m     53[0m [38;5;28;01mif[39;00m [38;5;18m__name__[39m [38;5;241m==[39m [38;5;124m'[39m[38;5;124m__main__[39m[38;5;124m'[39m:
[0;32m---> 54[0m     [43mapp[49m[38;5;241;43m.[39;49m[43mrun_server[49m[43m([49m[43mdebug[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m

File [0;32m~/anaconda3/lib/python3.10/site-packages/dash/dash.py:2091[0m, in [0;36mDash.run_server[0;34m(self, *args, **kwargs)[0m
[1;32m   2085[0m [38;5;28;01mdef[39;00m [38;5;21mrun_server[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   2086[0m     [38;5;124;03m"""`run_server` is a deprecated alias of `run` and may be removed in a[39;00m
[1;32m   2087[0m [38;5;124;03m    future version. We recommend using `app.run` instead.[39;00m
[1;32m   2088[0m 
[1;32m   2089[0m [38;5;124;03m    See `app.run` for usage information.[39;00m
[1;32m   2090[0m [38;5;124;03m    """[39;00m
[0;32m-> 2091[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/anaconda3/lib/python3.10/site-packages/dash/dash.py:1989[0m, in [0;36mDash.run[0;34m(self, host, port, proxy, debug, jupyter_mode, jupyter_width, jupyter_height, jupyter_server_url, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors, **flask_run_options)[0m
[1;32m   1986[0m             extra_files[38;5;241m.[39mappend(path)
[1;32m   1988[0m [38;5;28;01mif[39;00m jupyter_dash[38;5;241m.[39mactive:
[0;32m-> 1989[0m     [43mjupyter_dash[49m[38;5;241;43m.[39;49m[43mrun_app[49m[43m([49m
[1;32m   1990[0m [43m        [49m[38;5;28;43mself[39;49m[43m,[49m
[1;32m   1991[0m [43m        [49m[43mmode[49m[38;5;241;43m=[39;49m[43mjupyter_mode[49m[43m,[49m
[1;32m   1992[0m [43m        [49m[43mwidth[49m[38;5;241;43m=[39;49m[43mjupyter_width[49m[43m,[49m
[1;32m   1993[0m [43m        [49m[43mheight[49m[38;5;241;43m=[39;49m[43mjupyter_height[49m[43m,[49m
[1;32m   1994[0m [43m        [49m[43mhost[49m[38;5;241;43m=[39;49m[43mhost[49m[43m,[49m
[1;32m   1995[0m [43m        [49m[43mport[49m[38;5;241;43m=[39;49m[43mport[49m[43m,[49m
[1;32m   1996[0m [43m        [49m[43mserver_url[49m[38;5;241;43m=[39;49m[43mjupyter_server_url[49m[43m,[49m
[1;32m   1997[0m [43m    [49m[43m)[49m
[1;32m   1998[0m [38;5;28;01melse[39;00m:
[1;32m   1999[0m     [38;5;28mself[39m[38;5;241m.[39mserver[38;5;241m.[39mrun(host[38;5;241m=[39mhost, port[38;5;241m=[39mport, debug[38;5;241m=[39mdebug, [38;5;241m*[39m[38;5;241m*[39mflask_run_options)

File [0;32m~/anaconda3/lib/python3.10/site-packages/dash/_jupyter.py:329[0m, in [0;36mJupyterDash.run_app[0;34m(self, app, mode, width, height, host, port, server_url)[0m
[1;32m    325[0m     [38;5;28;01mpass[39;00m
[1;32m    327[0m err_q [38;5;241m=[39m queue[38;5;241m.[39mQueue()
[0;32m--> 329[0m server [38;5;241m=[39m [43mmake_server[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mapp[49m[38;5;241;43m.[39;49m[43mserver[49m[43m,[49m[43m [49m[43mthreaded[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mprocesses[49m[38;5;241;43m=[39;49m[38;5;241;43m0[39;49m[43m)[49m
[1;32m    330[0m logging[38;5;241m.[39mgetLogger([38;5;124m"[39m[38;5;124mwerkzeug[39m[38;5;124m"[39m)[38;5;241m.[39msetLevel(logging[38;5;241m.[39mERROR)
[1;32m    332[0m [38;5;129m@retry[39m(
[1;32m    333[0m     stop_max_attempt_number[38;5;241m=[39m[38;5;241m15[39m,
[1;32m    334[0m     wait_exponential_multiplier[38;5;241m=[39m[38;5;241m100[39m,
[1;32m    335[0m     wait_exponential_max[38;5;241m=[39m[38;5;241m1000[39m,
[1;32m    336[0m )
[1;32m    337[0m [38;5;28;01mdef[39;00m [38;5;21mrun[39m():

File [0;32m~/anaconda3/lib/python3.10/site-packages/werkzeug/serving.py:852[0m, in [0;36mmake_server[0;34m(host, port, app, threaded, processes, request_handler, passthrough_errors, ssl_context, fd)[0m
[1;32m    849[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mCannot have a multi-thread and multi-process server.[39m[38;5;124m"[39m)
[1;32m    851[0m [38;5;28;01mif[39;00m threaded:
[0;32m--> 852[0m     [38;5;28;01mreturn[39;00m [43mThreadedWSGIServer[49m[43m([49m
[1;32m    853[0m [43m        [49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mapp[49m[43m,[49m[43m [49m[43mrequest_handler[49m[43m,[49m[43m [49m[43mpassthrough_errors[49m[43m,[49m[43m [49m[43mssl_context[49m[43m,[49m[43m [49m[43mfd[49m[38;5;241;43m=[39;49m[43mfd[49m
[1;32m    854[0m [43m    [49m[43m)[49m
[1;32m    856[0m [38;5;28;01mif[39;00m processes [38;5;241m>[39m [38;5;241m1[39m:
[1;32m    857[0m     [38;5;28;01mreturn[39;00m ForkingWSGIServer(
[1;32m    858[0m         host,
[1;32m    859[0m         port,
[0;32m   (...)[0m
[1;32m    865[0m         fd[38;5;241m=[39mfd,
[1;32m    866[0m     )

File [0;32m~/anaconda3/lib/python3.10/site-packages/werkzeug/serving.py:711[0m, in [0;36mBaseWSGIServer.__init__[0;34m(self, host, port, app, handler, passthrough_errors, ssl_context, fd)[0m
[1;32m    708[0m [38;5;28;01mif[39;00m fd [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    709[0m     [38;5;66;03m# No existing socket descriptor, do bind_and_activate=True.[39;00m
[1;32m    710[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 711[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mserver_bind[49m[43m([49m[43m)[49m
[1;32m    712[0m         [38;5;28mself[39m[38;5;241m.[39mserver_activate()
[1;32m    713[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mBaseException[39;00m:

File [0;32m~/anaconda3/lib/python3.10/http/server.py:137[0m, in [0;36mHTTPServer.server_bind[0;34m(self)[0m
[1;32m    135[0m [38;5;28;01mdef[39;00m [38;5;21mserver_bind[39m([38;5;28mself[39m):
[1;32m    136[0m     [38;5;124;03m"""Override server_bind to store the server name."""[39;00m
[0;32m--> 137[0m     [43msocketserver[49m[38;5;241;43m.[39;49m[43mTCPServer[49m[38;5;241;43m.[39;49m[43mserver_bind[49m[43m([49m[38;5;28;43mself[39;49m[43m)[49m
[1;32m    138[0m     host, port [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mserver_address[:[38;5;241m2[39m]
[1;32m    139[0m     [38;5;28mself[39m[38;5;241m.[39mserver_name [38;5;241m=[39m socket[38;5;241m.[39mgetfqdn(host)

File [0;32m~/anaconda3/lib/python3.10/socketserver.py:466[0m, in [0;36mTCPServer.server_bind[0;34m(self)[0m
[1;32m    464[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mallow_reuse_address:
[1;32m    465[0m     [38;5;28mself[39m[38;5;241m.[39msocket[38;5;241m.[39msetsockopt(socket[38;5;241m.[39mSOL_SOCKET, socket[38;5;241m.[39mSO_REUSEADDR, [38;5;241m1[39m)
[0;32m--> 466[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msocket[49m[38;5;241;43m.[39;49m[43mbind[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mserver_address[49m[43m)[49m
[1;32m    467[0m [38;5;28mself[39m[38;5;241m.[39mserver_address [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msocket[38;5;241m.[39mgetsockname()

[0;31mOSError[0m: [Errno 48] Address already in use
OSError: [Errno 48] Address already in use

